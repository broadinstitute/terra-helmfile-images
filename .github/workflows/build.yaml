name: Build and Publish Docker Images
# The purpose of the workflow is to build docker images and publish to GCR.
#
# Docker image builds are assigned the following image tags:
# - ${BRANCH}               # Eg. "main"
# - ${BRANCH}-${SHORT_SHA}  # Eg. "main-92735c1"
# - ${BRANCH}-${LONG_SHA}   # Eg. "main-92735c1ccef29bfb659fd848bd3e0f084831a2de"
on:
  pull_request:
    paths-ignore:
      - 'README.md'
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
env:
  # Google project where images should be published
  GOOGLE_PROJECT: dsp-artifact-registry
  # Name of the app-specific Docker repository configured in GOOGLE_PROJECT
  IMAGE_REPOSITORY_NAME: ${{ github.event.repository.name }}
  # Region-specific Google Docker repository where GOOGLE_PROJECT/REPOSITORY_NAME can be found
  GOOGLE_DOCKER_REPOSITORY: us-central1-docker.pkg.dev
jobs:
  tools:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: tools
    outputs:
      tag-branch:     ${{ steps.tags.outputs.branch }}
      tag-short:      ${{ steps.tags.outputs.short }}
      tag-long:       ${{ steps.tags.outputs.long }}
      image-base-url: ${{ steps.vars.outputs.image-base-url }}
      image-url:      ${{ steps.image-url.outputs.image-url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set variables
        id:   vars
        run:  |
          echo "::set-output name=branch::$(echo ${GITHUB_REF#refs/heads/})"
          echo "::set-output name=long-sha::${github_sha}"
          echo "::set-output name=short-sha::$(git rev-parse --short HEAD)"
          echo "::set-output name=image-base-url::${GOOGLE_DOCKER_REPOSITORY}/${GOOGLE_PROJECT}/${IMAGE_REPOSITORY_NAME}"

      - name: Set image tags
        id:   tags
        run:  |
          echo "::set-output name=branch::${{ steps.vars.outputs.branch }}"
          echo "::set-output name=short::${{ steps.vars.outputs.branch }}-${{ steps.vars.outputs.short-sha }}"
          echo "::set-output name=long::${{ steps.vars.outputs.branch }}-${{ steps.vars.outputs.long-sha }}"

      - name: Set image name
        id:   image-name
        run:  |
          echo "::set-output name=name::${{ steps.vars.outputs.image-base-url }}/${IMAGE_NAME}:${{ steps.tags.outputs.long }}"
          echo "::set-output name=alias-branch::${{ steps.vars.outputs.image-base-url }}/${IMAGE_NAME}:${{ steps.tags.outputs.branch }}"
          echo "::set-output name=alias-short::${{ steps.vars.outputs.image-base-url }}/${IMAGE_NAME}:${{ steps.tags.outputs.short }}"

      - name: Auth to GCP
        uses: google-github-actions/setup-gcloud@master
        with:
          version: '345.0.0'
          service_account_email: ${{ secrets.GCP_PUBLISH_EMAIL }}
          service_account_key:   ${{ secrets.GCP_PUBLISH_KEY_B64 }}

      - name: Explicitly auth Docker for Artifact Registry
        run: gcloud auth configure-docker $GOOGLE_DOCKER_REPOSITORY --quiet

      - name: Build image
        run: |
          docker build \
            -t ${{ steps.image-name.outputs.name }} \
            -t ${{ steps.image-name.outputs.alias-short }} \
            -t ${{ steps.image-name.outputs.alias-branch }} \
            tools/

      - name: Run Trivy vulnerability scanner
        # From https://github.com/broadinstitute/dsp-appsec-trivy-action
        uses: broadinstitute/dsp-appsec-trivy-action@v1
        with:
          image: ${{ steps.image-name.outputs.name  }}

      - name: Push image
        run: "docker push --all-tags ${{ steps.image-name.outputs.name }}"
